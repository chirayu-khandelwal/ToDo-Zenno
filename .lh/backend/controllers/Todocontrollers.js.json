{
    "sourceFile": "backend/controllers/Todocontrollers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1743433508451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1743433508451,
            "name": "Commit-0",
            "content": "// controllers/ToDoController.js\n\nconst ToDoModel = require('../models/ToDoModel');\n\nmodule.exports.getToDo = async (req, res) => {\n    try {\n        const toDo = await ToDoModel.find();\n        res.send(toDo);\n    } catch (err) {\n        console.error(\"Error fetching ToDos:\", err);\n        res.status(500).send({ message: \"Error fetching ToDos\", error: err });\n    }\n};\n\nmodule.exports.saveToDo = async (req, res) => {\n    const { text } = req.body;\n    try {\n        const data = await ToDoModel.create({ text });\n        console.log(\"Added Successfully...\");\n        console.log(data);\n        res.status(201).send(data); // Send 201 status for created\n    } catch (err) {\n        console.error(\"Error saving ToDo:\", err);\n        res.status(500).send({ message: \"Error saving ToDo\", error: err });\n    }\n};\n\nmodule.exports.updateToDo = async (req, res) => {\n    const { _id, text } = req.body;\n    try {\n        // Add { new: true } to return the updated document\n        const updatedToDo = await ToDoModel.findByIdAndUpdate(_id, { text }, { new: true });\n        if (!updatedToDo) {\n            return res.status(404).send({ message: \"ToDo not found\" });\n        }\n        res.send(updatedToDo); // Send the updated document back\n        console.log(\"Updated Successfully...\");\n    } catch (err) {\n        console.error(\"Error updating ToDo:\", err);\n        res.status(500).send({ message: \"Error updating ToDo\", error: err });\n    }\n};\n\nmodule.exports.deleteToDo = async (req, res) => {\n    const { _id } = req.body;\n    try {\n        const deletedToDo = await ToDoModel.findByIdAndDelete(_id);\n        if (!deletedToDo) {\n            return res.status(404).send({ message: \"ToDo not found\" });\n        }\n        res.send({ message: \"Deleted Successfully...\" });\n        console.log(\"Deleted Successfully...\");\n    } catch (err) {\n        console.error(\"Error deleting ToDo:\", err);\n        res.status(500).send({ message: \"Error deleting ToDo\", error: err });\n    }\n};"
        }
    ]
}